# ===============================================
# Blaze Gallery Configuration Template
# ===============================================
#
# This file contains all the required and optional environment variables
# for configuring your Blaze Gallery application.
#
# Copy this file to .env and fill in your actual values:
#   cp .env.template .env
#
# IMPORTANT: Keep your .env file secure and never commit it to version control!

# ===============================================
# BACKBLAZE B2 CONFIGURATION (Required)
# ===============================================
#
# Your Backblaze B2 bucket configuration for photo storage.
# The application only requires READ access to your bucket for security.
#
# Get these values from your Backblaze B2 console:
# 1. Go to https://secure.backblaze.com/b2_buckets.htm
# 2. Create an Application Key with READ-ONLY access to your photo bucket
# 3. Note your endpoint URL (varies by region)

# Your Backblaze B2 S3-compatible endpoint URL
# Examples:
#   US West: https://s3.us-west-004.backblazeb2.com
#   EU: https://s3.eu-central-003.backblazeb2.com
BACKBLAZE_ENDPOINT=https://s3.us-west-004.backblazeb2.com

# Your Backblaze B2 bucket name where your photos are stored
BACKBLAZE_BUCKET=your-photo-bucket-name

# Your Backblaze B2 Application Key ID (NOT your Master Application Key!)
# Create a restricted key with READ-ONLY access for security
BACKBLAZE_ACCESS_KEY=your_application_key_id_here

# Your Backblaze B2 Application Key Secret
BACKBLAZE_SECRET_KEY=your_application_key_secret_here

# ===============================================
# APPLICATION CONFIGURATION (Optional)
# ===============================================
#
# These settings control thumbnail management and sync behavior.
# The defaults should work for most users.

# How many days to keep thumbnail files before cleanup (default: 30)
# Older thumbnails will be automatically deleted to save disk space
THUMBNAIL_MAX_AGE_DAYS=30

# How often to automatically sync with Backblaze in hours (default: 24)
# Set to 0 to disable automatic sync (manual sync only)
SYNC_INTERVAL_HOURS=24

# ===============================================
# ON-DEMAND PROCESSING THRESHOLDS (Optional)
# ===============================================
#
# Control automatic processing based on file size to optimize performance
# for large photo collections. Large files (>30MB) require explicit user action.

# Maximum file size in MB for automatic metadata extraction (default: 5)
# Photos larger than this will have metadata extracted only when explicitly viewed
AUTO_METADATA_THRESHOLD_MB=5

# Maximum file size in MB for automatic thumbnail generation (default: 10)
# Photos larger than this will have thumbnails generated only when explicitly requested
AUTO_THUMBNAIL_THRESHOLD_MB=10

# ===============================================
# SYNC THROTTLING CONFIGURATION (Optional)
# ===============================================
#
# Control how often the same folder can be synced to prevent duplicate requests

# Minimum seconds between sync requests for the same folder (default: 30)
# Prevents duplicate sync operations when rapidly navigating folders
SYNC_THROTTLE_SECONDS=30

# ===============================================
# LOGGING CONFIGURATION (Optional)
# ===============================================
#
# Control how much detail is logged by the application.
# Useful for troubleshooting Backblaze connectivity issues.

# Log level: DEBUG, INFO, WARN, ERROR (default: INFO)
# Use DEBUG for detailed Backblaze connection troubleshooting
LOG_LEVEL=INFO

# ===============================================
# AUTHENTICATION (Optional - For Production)
# ===============================================
#
# IMPORTANT: This is completely OPTIONAL for local development!
# The app works perfectly without any authentication configured.
# Only enable authentication if you want to secure your gallery with Google login.

# ===============================================
# GOOGLE OAUTH 2.0 AUTHENTICATION (Optional)
# ===============================================
#
# Enable Google authentication to restrict access to your gallery.
# See SETUP_GOOGLE.md for complete setup instructions.
# 
# Set to 'true' to enable Google authentication (default: false)
# When enabled, only users in AUTH_EMAIL_WHITELIST can access the gallery
# GOOGLE_AUTH_ENABLED=true

# Google OAuth Client ID from Google Cloud Console
# Get this from: https://console.cloud.google.com/apis/credentials  
# GOOGLE_CLIENT_ID=your-google-client-id.googleusercontent.com

# Google OAuth Client Secret from Google Cloud Console
# GOOGLE_CLIENT_SECRET=your-google-client-secret

# OAuth redirect URI (should match your Google Cloud Console settings)
# For development: http://localhost:3000/api/auth/google/callback
# For production: https://yourdomain.com/api/auth/google/callback
# GOOGLE_REDIRECT_URI=http://localhost:3000/api/auth/google/callback

# Comma-separated list of email addresses allowed to access the gallery
# Only these users can log in when authentication is enabled
# AUTH_EMAIL_WHITELIST=user1@gmail.com,user2@gmail.com,admin@yourdomain.com

# Session secret for encrypting authentication sessions (32+ characters)
# Generate a secure random string: openssl rand -base64 32
# AUTH_SESSION_SECRET=your-very-long-random-session-secret-at-least-32-chars

# Session duration in seconds (default: 86400 = 24 hours)
# AUTH_SESSION_DURATION=86400

# ===============================================
# LEGACY API KEY AUTHENTICATION (Deprecated)
# ===============================================
#
# Simple API key authentication (not recommended for production)
# Use Google OAuth above instead for better security
# API_KEY=your_secure_random_api_key_here

# ===============================================
# DATABASE CONFIGURATION (Required)
# ===============================================
#
# PostgreSQL database connection string for Neon
# Get this from your Neon project dashboard

# Neon PostgreSQL connection string
# Example: postgresql://username:password@ep-example-123456.c-2.us-east-2.aws.neon.tech/dbname?sslmode=require
DATABASE_URL=postgresql://your_username:your_password@your_host.neon.tech/neondb?sslmode=require

# ===============================================
# DEPLOYMENT CONFIGURATION (Optional)
# ===============================================
#
# These settings control how the application behaves in different environments.

# Base URL for the application (used for social media cards, emails, etc.)
# Leave as localhost for development, set to your domain for production
# Examples:
#   Development: http://localhost:3000
#   Production: https://gallery.yourdomain.com
NEXT_PUBLIC_APP_URL=http://localhost:3000

# Disable Next.js telemetry (recommended)
NEXT_TELEMETRY_DISABLED=1

# ===============================================
# SETUP INSTRUCTIONS
# ===============================================
#
# 1. Copy this file to .env:
#    cp .env.template .env
#
# 2. Edit .env and fill in your Backblaze B2 credentials
#
# 3. Start Blaze Gallery:
#    docker-compose up -d
#
# 4. Visit http://localhost:3000 in your browser
#
# 5. Click "Sync" to scan your Backblaze bucket for photos
#
# ===============================================
# SECURITY NOTES
# ===============================================
#
# FOR LOCAL DEVELOPMENT:
# - No authentication required - app works without API keys
# - Use READ-ONLY Backblaze keys for maximum security
# - Never commit your .env file to version control
# - The application only reads from your bucket, never modifies
# - Local thumbnails are generated for fast viewing
# - Original photos remain safely in Backblaze B2
#
# FOR PRODUCTION DEPLOYMENT:
# - Uncomment and set API_KEY above for basic endpoint protection
# - Use a long, random key (32+ characters)
# - Consider using proper OAuth2/JWT for web-facing deployments
#
# For troubleshooting, set LOG_LEVEL=DEBUG to see detailed
# connection logs for Backblaze B2 operations.
#
# ===============================================